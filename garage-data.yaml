substitutions:
  device_host_name: garage-data
  device_id_name: garage_data
  device_written_name: Garage Data
  entity_prefix: Garage

<<:
  - !include common/esp32dev.yaml
  - !include common/ttgo.yaml

time:
  - platform: homeassistant
    id: esptime

spi:
  clk_pin: GPIO18
  mosi_pin: GPIO19

binary_sensor:
  - platform: status
    name: "${device_written_name} Status"
    id: system_status
  - platform: gpio
    pin:
      number: GPIO0
      inverted: true
      mode: INPUT_PULLUP
    name: "${device_written_name} Button 0"
    id: ${device_id_name}_button_0
    filters:
      - delayed_on: 10ms
    on_press:
      then:
        - light.toggle: ${device_id_name}_backlight
  - platform: gpio
    pin:
      number: GPIO35
      inverted: true
    name: "${device_written_name} Button 1"
    id: ${device_id_name}_button_1
    filters:
      - delayed_on: 10ms


output:
  - platform: ledc
    pin: GPIO4
    id: display_backlight_ledc

light:
  - platform: monochromatic
    output: display_backlight_ledc
    name: "${device_written_name} Backlight"
    id: ${device_id_name}_backlight
    restore_mode: RESTORE_DEFAULT_ON

i2c:
  sda: GPIO21
  scl: GPIO22

sensor:
  - platform: wifi_signal
    name: "${entity_prefix} WiFi Signal"
    update_interval: 60s
  - platform: sht3xd
    temperature:
      name: "${entity_prefix} Temperature"
      id: temperature
      filters:
        - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "°F"
    humidity:
      name: "${entity_prefix} Humidity"
      id: humidity
    address: 0x44
    update_interval: 60s

# 240px x 135px
display:
  - platform: st7789v
    model: TTGO TDisplay 135x240
    backlight_pin: no
    cs_pin: GPIO5
    dc_pin: GPIO16
    reset_pin: GPIO23
    rotation: 0
    lambda: |-
      it.filled_rectangle(0,  0, it.get_width(), it.get_height(), id(my_white));
      it.rectangle(0,  0, it.get_width(), it.get_height(), id(my_blue));
      it.print(5, 5, id(ubuntu_mono_powerline_12), id(my_yellow), TextAlign::TOP_LEFT, "GarageData.local"); 

      // %% - literal % sign
      it.printf((it.get_width() / 2), (it.get_height() / 5) * 1 + 5, id(ubuntu_mono_powerline_bold_42), id(my_blue), TextAlign::CENTER, "%.1f°F", id(temperature).state);
      it.printf((it.get_width() / 2), (it.get_height() / 5) * 2 + 5, id(ubuntu_mono_powerline_bold_28), id(my_blue), TextAlign::CENTER, "%.1f%%", id(humidity).state);
      it.print((it.get_width() / 2), (it.get_height() / 5) * 3 + 5, id(ubuntu_mono_powerline_bold_28), id(my_blue), TextAlign::CENTER, "Humidity");
